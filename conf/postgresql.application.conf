# Copyright 2019 Dropbox Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ~~~~~

include required("portal.application.conf")

# Database
# ~~~~~
postgres.host = "localhost"
postgres.host = ${?PG_HOST}
postgres.port = 5432
postgres.port = ${?PG_PORT}
postgres.db = "metrics"
postgres.db = ${?PG_DB}

db {
  metrics_portal {
    username = "metrics_app"
    username = ${?PG_METRICS_APP_USER}
    password = "metrics_app_password"
    password = ${?PG_METRICS_APP_PASSWORD}
    url = "jdbc:postgresql://"${postgres.host}":"${postgres.port}"/"${postgres.db}"?currentSchema=portal"
    url = ${?PG_METRICS_URL}
    driver = "org.postgresql.Driver"

    hikaricp.poolName = "metrics_portal_dml"
    hikaricp.maximumPoolSize = 5
  }

  metrics_portal_ddl {
    username = "metrics_dba"
    username = ${?PG_METRICS_DBA_USER}
    password = "metrics_dba_password"
    password = ${?PG_METRICS_DBA_PASSWORD}
    url = "jdbc:postgresql://"${postgres.host}":"${postgres.port}"/"${postgres.db}"?currentSchema=portal"
    url = ${?PG_METRICS_URL}
    driver = "org.postgresql.Driver"

    initOnMigrate = false
    validateOnMigrate = true
    encoding = "UTF-8"
    migration.auto = true
    migration.schemas = ["portal"]

    hikaricp.poolName = "metrics_portal_ddl"
    hikaricp.maximumPoolSize = 2
  }

  pekko_ddl {
    username = "pekko_dba"
    username = ${?PG_PEKKO_DBA_USER}
    password = "pekko_dba_password"
    password = ${?PG_PEKKO_DBA_PASSWORD}
    url = "jdbc:postgresql://"${postgres.host}":"${postgres.port}"/"${postgres.db}"?currentSchema=pekko"
    url = ${?PG_PEKKO_URL}
    driver = "org.postgresql.Driver"

    initOnMigrate = false
    validateOnMigrate = true
    encoding = "UTF-8"
    migration.auto = true
    migration.schemas = ["pekko"]

    hikaricp.poolName = "pekko_ddl"
    hikaricp.maximumPoolSize = 2
  }

  # NOTE: Please refer to main/postgres/initdb.d for how to initialize your Postgresql instance.
  # NOTE: The Pekko DML connection pool is configured below under Pekko using Slick.
}

# Evolutions & Ebean
play.evolutions.enabled = false
play.modules.enabled += "org.flywaydb.play.PlayModule"
ebeanconfig.datasource.default = "metrics_portal"
play.db.default = "metrics_portal"
play.ebean.defaultDatasource = "metrics_portal"

ebean.metrics_portal = ["models.ebean.*", "global.MetricsPortalServerConfigStartup"]
# Only used for table creation, so no models are needed.
ebean.metrics_portal_ddl = []

# Host repository
# ~~~~~
hostRepository.type = "com.arpnetworking.metrics.portal.hosts.impl.DatabaseHostRepository"

# Alerts
# ~~~~~
alertExecutionRepository {
    type = "com.arpnetworking.metrics.portal.alerts.impl.CachingAlertExecutionRepository"
    inner {
        type = "com.arpnetworking.metrics.portal.alerts.impl.DatabaseAlertExecutionRepository"
        partitionManager {
            lookahead = 7
            offset = "0s"
        }
    }
}
alertExecutionCache {
    enabled = true
    maxSize = 1000
    expireAfterAccess = 5min
}

# Reports
# ~~~~~
reportRepository.type = "com.arpnetworking.metrics.portal.reports.impl.DatabaseReportRepository"
reportExecutionRepository.type = "com.arpnetworking.metrics.portal.reports.impl.DatabaseReportExecutionRepository"

# Pekko
# ~~~~~
pekko {
  persistence {
    journal {
      plugin="jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin="jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}

jdbc-journal {
  slick = ${slick}
  tables.journal.schemaName = pekko
}

jdbc-snapshot-store {
  slick = ${slick}
  tables.snapshot.schemaName = pekko
}

jdbc-read-journal {
  slick = ${slick}
  tables.journal.schemaName = pekko
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = ${postgres.db}
    user = "pekko_app"
    user = ${?PG_PEKKO_APP_USER}
    password = "pekko_app_password"
    password = ${?PG_PEKKO_APP_PASSWORD}
    url = "jdbc:postgresql://"${postgres.host}":"${postgres.port}"/"${postgres.db}"?reWriteBatchedInserts=true&currentSchema=pekko"
    url = ${?PG_PEKKO_URL}
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}
